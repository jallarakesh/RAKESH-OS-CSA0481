#include <stdio.h>

#define MAX_PROCESSES 4
#define MAX_RESOURCES 3

int main() {
    int claim[MAX_PROCESSES][MAX_RESOURCES] = {
        {3, 2, 2},
        {6, 1, 3},
        {3, 1, 4},
        {4, 2, 2}
    };

    int allocation[MAX_PROCESSES][MAX_RESOURCES] = {
        {1, 0, 0},
        {6, 1, 2},
        {2, 1, 1},
        {0, 0, 2}
    };

    int available[MAX_RESOURCES] = {9, 3, 6};
    int work[MAX_RESOURCES];
    int finish[MAX_PROCESSES] = {0};

    
    for (int i = 0; i < MAX_RESOURCES; ++i) {
        work[i] = available[i];
    }

  
    for (int i = 0; i < MAX_PROCESSES; ++i) {
        if (!finish[i]) {
            int canAllocate = 1;
            for (int j = 0; j < MAX_RESOURCES; ++j) {
                if (claim[i][j] - allocation[i][j] > work[j]) {
                    canAllocate = 0;
                    break;
                }
            }

            if (canAllocate) {
                for (int j = 0; j < MAX_RESOURCES; ++j) {
                    work[j] += allocation[i][j];
                }
                finish[i] = 1;
                i = -1;  // Restart the loop
            }
        }
    }

    
    int safe = 1;
    for (int i = 0; i < MAX_PROCESSES; ++i) {
        if (!finish[i]) {
            safe = 0;
            break;
        }
    }

    if (safe) {
        printf("The system is in a safe state.\n");
    } else {
        printf("The system is in an unsafe state.\n");
    }

    return 0;
}
